// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>


const char DEVICE_LOGIN_NAME[]  = "5298c2e4-1223-4612-8de0-555090047f61";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onPumpDurationMinsChange();
void onPumpStatusTChange();
void onDueResetChange();
void onFanSwitchChange();
void onLightStatusChange();

String fullMoistureOutput;
String systemStatus;
String systemUpTime;
float CO2;
float electric_Conductivity_Microsiemens_per_centimeter;
float humidity;
float light_Intensity;
float pressure_hectoPascals_hPa;
float temperature;
float total_Dissolved_Solids_PPM;
float VOC;
int air_Quality_Index;
int cycle_Duration;
int iAQ_AC;
int pump_Duration_Mins;
int rootsMoisturePercent;
CloudSchedule pumpStatus_t;
bool dueReset;
bool fanStatus_real;
bool fanSwitch;
bool lightIsOFF;
bool light_status;
bool pumpStatus;
bool pumpStatus2;
bool waterLevel;
CloudTime time_read;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(fullMoistureOutput, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(systemStatus, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(systemUpTime, READ, 5 * SECONDS, NULL);
  ArduinoCloud.addProperty(CO2, READ, ON_CHANGE, NULL, 50);
  ArduinoCloud.addProperty(electric_Conductivity_Microsiemens_per_centimeter, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(humidity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(light_Intensity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pressure_hectoPascals_hPa, READ, ON_CHANGE, NULL, 250);
  ArduinoCloud.addProperty(temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(total_Dissolved_Solids_PPM, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(VOC, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(air_Quality_Index, READ, ON_CHANGE, NULL, 10);
  ArduinoCloud.addProperty(cycle_Duration, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(iAQ_AC, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pump_Duration_Mins, READWRITE, ON_CHANGE, onPumpDurationMinsChange, 1);
  ArduinoCloud.addProperty(rootsMoisturePercent, READ, 60 * SECONDS, NULL);
  ArduinoCloud.addProperty(pumpStatus_t, READWRITE, ON_CHANGE, onPumpStatusTChange);
  ArduinoCloud.addProperty(dueReset, READWRITE, ON_CHANGE, onDueResetChange);
  ArduinoCloud.addProperty(fanStatus_real, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(fanSwitch, READWRITE, ON_CHANGE, onFanSwitchChange);
  ArduinoCloud.addProperty(lightIsOFF, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(light_status, READWRITE, ON_CHANGE, onLightStatusChange);
  ArduinoCloud.addProperty(pumpStatus, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pumpStatus2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(waterLevel, READ, 60 * SECONDS, NULL);
  ArduinoCloud.addProperty(time_read, READ, ON_CHANGE, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
